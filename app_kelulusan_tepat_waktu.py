# -*- coding: utf-8 -*-
"""app kelulusan tepat waktu.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1p0sxa5WaualBb0F6F4BUHr9hYJ_ePHRw
"""

import streamlit as st
import pandas as pd
import joblib

# Load model
model = joblib.load('best_model.pkl')

# Judul aplikasi
st.title("ðŸŽ“ Prediksi Kelulusan Tepat Waktu")

st.write("""
Aplikasi ini memprediksi apakah seorang mahasiswa akan lulus tepat waktu berdasarkan data akademik dan aktivitasnya.
""")

# Sidebar input data
st.sidebar.header("Masukkan Data Mahasiswa")

def user_input():
    ipk = st.sidebar.number_input("IPK", min_value=0.0, max_value=4.0, value=3.0)
    pelatihan = st.sidebar.number_input("Pelatihan Pengembangan Diri", min_value=0, value=0)
    prestasi = st.sidebar.number_input("Prestasi", min_value=0, value=0)
    forum = st.sidebar.number_input("Forum Komunikasi Kuliah", min_value=0, value=0)
    organisasi = st.sidebar.number_input("Kegiatan Organisasi", min_value=0, value=0)

    data = {
        'IPK': [ipk],
        'Pelatihan Pengembangan Diri': [pelatihan],
        'Prestasi': [prestasi],
        'Forum Komunikasi Kuliah': [forum],
        'Kegiatan Organisasi': [organisasi]
    }
    return pd.DataFrame(data)

input_mode = st.radio("Pilih cara input data", ["Manual", "Upload CSV"])

if input_mode == "Manual":
    input_df = user_input()
else:
    uploaded_file = st.file_uploader("Upload file CSV", type=["csv"])
    if uploaded_file is not None:
        input_df = pd.read_csv(uploaded_file)
        expected_cols = ['IPK', 'Pelatihan Pengembangan Diri', 'Prestasi', 'Forum Komunikasi Kuliah', 'Kegiatan Organisasi']
        if not all(col in input_df.columns for col in expected_cols):
            st.error(f"CSV harus punya kolom: {', '.join(expected_cols)}")
            st.stop()
    else:
        st.warning("Silakan upload file CSV.")
        st.stop()

# Tampilkan data input
st.subheader("Data yang Dimasukkan")
st.write(input_df)

# Prediksi
if st.button("Prediksi"):
    pred = model.predict(input_df)
    label_map = {0: "Tidak Lulus Tepat Waktu", 1: "Lulus Tepat Waktu"}
    hasil = [label_map[p] for p in pred]

    input_df['Prediksi'] = hasil

    st.subheader("Hasil Prediksi")
    st.write(input_df[['Prediksi']])

    if len(hasil) == 1:
        st.success(f"Hasil: **{hasil[0]}**")